(vim1.icc<-vim1.psi/(vim1.psi+vim1.theta))
(vim1.psi<-attr(summary(vim1)$varcor$id,"stddev")^2)
(vim1.theta<-attr(summary(vim1)$varcor,"sc")^2)
(vim1.icc<-vim1.psi/(vim1.psi+vim1.theta))
vim1.noid<-lmer(wm~.,data=pefr.long)
anova(vim1)
vim1.noid<-lmer(wm~1,data=pefr.long)
vim1.noid<-lm(wm~1,data=pefr.long)
anova(vim1,vim1.noid)
summary(vim1)
anova.merMod
?anova.merMod
anova(vim1,vim1.noid)
anova(lmer(wm~1+(1|id),data=pefr.long,REML=F),vim1.noid)
anova(lmer(wm~1+(1|id),data=pefr.long,REML=FALSE),vim1.noid)
lmer(wm~1+(1|id),data=pefr.long,REML=FALSE)
lmer(wm~1,data=pefr.long,REML=FALSE)
install.packages("lmerTest")
require(lmerTest)
rand(vim1)
anova(lm(wm~factor(id),data=pefr.long),lm(wm~1,data=pefr.long))
##### Reproducing Rabe-Hesketh & Skrondal (RHS) in R
### Chapter 2
#2.3
require(foreign)
pefr<-read.dta("http://www.stata-press.com/data/mlmus3/pefr.dta")
pefr$mean_wm <- (pefr$wm1+pefr$wm2)/2
summary(pefr$mean_wm)
sd(pefr$mean_wm)
require(ggplot2)
ggplot(pefr) +
geom_point(aes(x=id,y=wm1,colour=1)) +
geom_point(aes(x=id,y=wm2,colour=2)) +
geom_hline(yintercept=mean(pefr$mean_wm)) +
theme_bw() +
theme(legend.position="none")
#2.5.1
pefr.long<-data.frame(id=rep(pefr$id,2),wp=c(pefr$wp1,pefr$wp2),wm=c(pefr$wm1,pefr$wm2),occasion=c(rep(1,nrow(pefr)),rep(2,nrow(pefr))))
#2.5.2
require(lme4)
vim1<-lmer(wm~1+(1|id),data=pefr.long)
summary(vim1)
(vim1.psi<-attr(summary(vim1)$varcor$id,"stddev")^2)
(vim1.theta<-attr(summary(vim1)$varcor,"sc")^2)
(vim1.icc<-vim1.psi/(vim1.psi+vim1.theta)) # ICC
#2.6.2
require(lmerTest)
rand(vim1) #likelihood ratio test
anova(lm(wm~factor(id),data=pefr.long),lm(wm~1,data=pefr.long)) #F-test
(vim1.icc<-vim1.psi/(vim1.psi+vim1.theta/2)) # ICC
# Reproducing Rabe-Hesketh & Skrondal (RHS) in R
# Ch 2
#2.3
require(foreign)
pefr<-read.dta("http://www.stata-press.com/data/mlmus3/pefr.dta")
pefr$mean_wm <- (pefr$wm1+pefr$wm2)/2
summary(pefr$mean_wm)
sd(pefr$mean_wm)
require(ggplot2)
ggplot(pefr) +
geom_point(aes(x=id,y=wm1,colour=1)) +
geom_point(aes(x=id,y=wm2,colour=2)) +
geom_hline(yintercept=mean(pefr$mean_wm)) +
theme_bw() +
theme(legend.position="none")
#2.5.1
pefr.long<-data.frame(id=rep(pefr$id,2),wp=c(pefr$wp1,pefr$wp2),wm=c(pefr$wm1,pefr$wm2),occasion=c(rep(1,nrow(pefr)),rep(2,nrow(pefr))))
#2.5.2
require(lme4)
vim1<-lmer(wm~1+(1|id),data=pefr.long,REML=F)
summary(vim1)
(vim1.psi<-attr(summary(vim1)$varcor$id,"stddev")^2)
(vim1.theta<-attr(summary(vim1)$varcor,"sc")^2)
(vim1.icc<-vim1.psi/(vim1.psi+vim1.theta)) # ICC
#2.6.2
require(lmerTest)
rand(vim1) #likelihood ratio test
summary(fem1<-lm(wm~factor(id),data=pefr.long))
anova(fem1,lm(wm~1,data=pefr.long)) #F-test
#2.9
pefr.long$occ2<-ifelse(pefr.long$occasion==2,1,0)
summary(cem1<-lmer(wm~occ2+(1|id),data=pefr.long,REML=F)) #crossed effects model
#2.10.3
se.bf<-sqrt(vim1.theta/length(pefr.long$id)) #fixed effects model se
se.ols<-summary(lm(wm~1,data=pefr.long))$coefficients[1,2] #ols se
require(arm)
se.b<-se.fixef(vim1) #RE model se
barplot(c(se.bf,se.ols,se.b),names=c("SE(B.F)","SE(B.OLS)","SE(B)"))
#2.11.1
ranef(vim1) #ML intercept estimates
#2.11.2
(vim1.ebr<-vim1.psi/(vim1.psi+vim1.theta/2)) # empirical bayes shrinkage factor R
ebests<-ranef(vim1)*vim1.ebr
ranef(vim1) #ML intercept estimates
ebests<-ranef(vim1)$id*vim1.ebr
ebests
rm(all)
rm(list(all))
rm(list=(ls(all=T)))
sm<-read.dta("http://www.stata-press.com/data/mlmus3/smoking.dta")
summary(lmer(birwt~smoke+male+mage+hsgrad+somecoll+collgrad+married+black+kessner2+kessner3+novisit+pretri2+pretri3+(1|momid),data=sm,REML=F))
summary(vimc1<-lmer(birwt~smoke+male+mage+hsgrad+somecoll+collgrad+married+black+kessner2+kessner3+novisit+pretri2+pretri3+(1|momid),data=sm,REML=F))
summary(vim2<-lmer(birwt~smoke+male+mage+hsgrad+somecoll+collgrad+married+black+kessner2+kessner3+novisit+pretri2+pretri3+(1|momid),data=sm,REML=F))
summary(vim2null<-lmer(1+(1|momid),data=sm,REML=F))
summary(vim2null<-lmer(birwt~1+(1|momid),data=sm,REML=F))
(vim2rsq<-(vim2totvar+vim2nulltotvar)/vim2nulltotvar)
vim2nulltotvar<-attr(summary(vim2null)$varcor$id,"stddev")^2+attr(summary(vim2null)$varcor,"sc")^2
vim2totvar<-attr(summary(vim2)$varcor$id,"stddev")^2+attr(summary(vim2)$varcor,"sc")^2
(vim2rsq<-(vim2totvar+vim2nulltotvar)/vim2nulltotvar)
#3.4.1
summary(vim2<-lmer(birwt~smoke+male+mage+hsgrad+somecoll+collgrad+married+black+kessner2+kessner3+novisit+pretri2+pretri3+(1|momid),data=sm,REML=F))
#3.5
summary(vim2null<-lmer(birwt~1+(1|momid),data=sm,REML=F))
vim2nulltotvar<-attr(summary(vim2null)$varcor$id,"stddev")^2+attr(summary(vim2null)$varcor,"sc")^2
vim2totvar<-attr(summary(vim2)$varcor$id,"stddev")^2+attr(summary(vim2)$varcor,"sc")^2
(vim2rsq<-(vim2totvar-vim2nulltotvar)/vim2nulltotvar)
summary(vim2)
summary(vim2)$varcor
summary(vim2)$varcor$id
attr(summary(vim2)$varcor$id,"stddev")
attr(summary(vim2)$varcor,"stddev")
attr(summary(vim2)$varcor)
str(summary(vim2)$varcor)
str(summary(vim2)$varcor$momid,"stddev")
vim2totvar<-attr(summary(vim2)$varcor$momid,"stddev")^2+attr(summary(vim2)$varcor,"sc")^2
vim2nulltotvar<-attr(summary(vim2null)$varcor$momid,"stddev")^2+attr(summary(vim2null)$varcor,"sc")^2
(vim2rsq<-(vim2totvar-vim2nulltotvar)/vim2nulltotvar)
View(sm)
View(sm)
as.numeric(sm$smoke)
as.numeric(sm$smoke)
sm$mn_smok<-NA
sm$dev_smok<-NA
for (i in 1:nrow(sm)){
sm$mn_smok[i]<-mean(as.numeric(sm$smoke[sm$momid==sm$momid[i]])-1,na.rm=T)
sm$dev_smok[i]<-as.numeric(sm$smoke)-1-sm$mn_smok[i]
}
View(sm)
momids<-unique(sm$momid)
mean(as.numeric(sm$smoke[sm$momid==sm$momid[1]])-1,na.rm=T)
View(sm)
for (i in 1:nrow(sm)){
sm$mn_smok[i]<-mean(as.numeric(sm$smoke[sm$momid==sm$momid[i]])-1,na.rm=T)
sm$dev_smok[i]<-as.numeric(sm$smoke[i])-1-sm$mn_smok[i]
}
summary(vim3<-lmer(birwt~dev_smok+mn_smok+male+mage+hsgrad+somecoll+collgrad+married+black+kessner2+kessner3+novisit+pretri2+pretri3+(1|momid),data=sm,REML=F))
# Reproducing Rabe-Hesketh & Skrondal (RHS) in R
# Ch 2
#2.3
require(foreign)
pefr<-read.dta("http://www.stata-press.com/data/mlmus3/pefr.dta")
pefr$mean_wm <- (pefr$wm1+pefr$wm2)/2
summary(pefr$mean_wm)
sd(pefr$mean_wm)
require(ggplot2)
ggplot(pefr) +
geom_point(aes(x=id,y=wm1,colour=1)) +
geom_point(aes(x=id,y=wm2,colour=2)) +
geom_hline(yintercept=mean(pefr$mean_wm)) +
theme_bw() +
theme(legend.position="none")
#2.5.1
pefr.long<-data.frame(id=rep(pefr$id,2),wp=c(pefr$wp1,pefr$wp2),wm=c(pefr$wm1,pefr$wm2),occasion=c(rep(1,nrow(pefr)),rep(2,nrow(pefr))))
#2.5.2
require(lme4)
vim1<-lmer(wm~1+(1|id),data=pefr.long,REML=F)
summary(vim1)
(vim1.psi<-attr(summary(vim1)$varcor$id,"stddev")^2)
(vim1.theta<-attr(summary(vim1)$varcor,"sc")^2)
(vim1.icc<-vim1.psi/(vim1.psi+vim1.theta)) # ICC
#2.6.2
require(lmerTest)
rand(vim1) #likelihood ratio test
summary(fem1<-lm(wm~factor(id),data=pefr.long))
anova(fem1,lm(wm~1,data=pefr.long)) #F-test
#2.9
pefr.long$occ2<-ifelse(pefr.long$occasion==2,1,0)
summary(cem1<-lmer(wm~occ2+(1|id),data=pefr.long,REML=F)) #crossed effects model
#2.10.3
se.bf<-sqrt(vim1.theta/length(pefr.long$id)) #fixed effects model se
se.ols<-summary(lm(wm~1,data=pefr.long))$coefficients[1,2] #ols se
require(arm)
se.b<-se.fixef(vim1) #RE model se
barplot(c(se.bf,se.ols,se.b),names=c("SE(B.F)","SE(B.OLS)","SE(B)"))
#2.11.1
ranef(vim1) #ML intercept estimates
#2.11.2
(vim1.ebr<-vim1.psi/(vim1.psi+vim1.theta/2)) # empirical bayes shrinkage factor R
ebests<-ranef(vim1)$id*vim1.ebr
ebests
### Chapter 3
rm(list=(ls(all=T)))
sm<-read.dta("http://www.stata-press.com/data/mlmus3/smoking.dta")
#3.4.1
summary(vim2<-lmer(birwt~smoke+male+mage+hsgrad+somecoll+collgrad+married+black+kessner2+kessner3+novisit+pretri2+pretri3+(1|momid),data=sm,REML=F))
#3.5
summary(vim2null<-lmer(birwt~1+(1|momid),data=sm,REML=F))
vim2totvar<-attr(summary(vim2)$varcor$momid,"stddev")^2+attr(summary(vim2)$varcor,"sc")^2
vim2nulltotvar<-attr(summary(vim2null)$varcor$momid,"stddev")^2+attr(summary(vim2null)$varcor,"sc")^2
(vim2rsq<-(vim2totvar-vim2nulltotvar)/vim2nulltotvar)
#3.7.5
as.numeric(sm$smoke)
sm$mn_smok<-NA
sm$dev_smok<-NA
momids<-unique(sm$momid)
mean(as.numeric(sm$smoke[sm$momid==sm$momid[1]])-1,na.rm=T)
for (i in 1:nrow(sm)){
sm$mn_smok[i]<-mean(as.numeric(sm$smoke[sm$momid==sm$momid[i]])-1,na.rm=T)
sm$dev_smok[i]<-as.numeric(sm$smoke[i])-1-sm$mn_smok[i]
}
summary(vim3<-lmer(birwt~dev_smok+mn_smok+male+mage+hsgrad+somecoll+collgrad+married+black+kessner2+kessner3+novisit+pretri2+pretri3+(1|momid),data=sm,REML=F))
rm(list=(ls(all=T)))
gc<-read.dta("http://www.stata-press.com/data/mlmus3/gcse.dta")
View(gc)
summary(lm(gsce~lrt,data=gc[gc$school==1,]))
summary(lm(gcse~lrt,data=gc[gc$school==1,]))
ggplot(gc,aes(x=lrt,y=gcse)) +
geom_point() +
geom_smooth(method="lm")
ggplot(subset(gc,school==1),aes(x=lrt,y=gcse)) +
geom_point() +
geom_smooth(method="lm")
ggplot(subset(gc,school==1),aes(x=lrt,y=gcse)) +
geom_point() +
geom_smooth(method="lm",alpha=0) +
theme_bw()
ggplot(subset(gc,school==1),aes(x=lrt,y=gcse)) +
geom_point() +
geom_smooth(method="lm",alpha=0,linetype=2) +
theme_bw()
ggplot(gc,aes(x=lrt,y=gcse)) +
geom_point() +
geom_smooth(method="lm",alpha=0,linetype=2) +
theme_bw() +
facet_wrap(school)
ggplot(gc,aes(x=lrt,y=gcse)) +
geom_point() +
geom_smooth(method="lm",alpha=0,linetype=2) +
theme_bw() +
facet_wrap(~school)
ggplot(gc,aes(x=lrt,y=gcse)) +
geom_point(alpha=.5) +
geom_smooth(method="lm",alpha=0,linetype=2) +
theme_bw() +
facet_wrap(~school)
summary(vim3<-lmer(gcse~lrt+(1|school),data=gc,REML=F))
predict(vim3)
vim3preds<-predict(vim3)
### script based on code by Erik Gahner Larsen, @erikgahner
library(XML)
#pull in data
url <- "http://en.wikipedia.org/wiki/Opinion_polling_for_the_next_Danish_general_election"
polls <- readHTMLTable(url)
#clean up
polls <- polls[[1]]
polls <- polls[-1,1:10]
names(polls) <- c("Institut", "date","Venstre","Socialdemokraterne","DF","Radikale","SF","Enhedslisten","LA","Konservative")
#get full date
breakpoints<-c(which(is.na(polls$date)),nrow(polls)-1)
yearsindata<-c(2014,2013,2012,2011)
polls$fulldate<-NA
for (i in 4:1){
polls$fulldate[0:breakpoints[i]]<-paste(polls$date[0:breakpoints[i]],", ",yearsindata[i],sep="")
}
polls$fulldate[nrow(polls)]<-polls$date[nrow(polls)]
polls<-polls[!is.na(polls$date),]
polls$fulldate[nrow(polls)]<-as.character(polls$date[nrow(polls)])
require(lubridate)
polls$fulldate<-mdy(tolower(polls$fulldate),locale="English")
#clean up house names
polls$Institut <- gsub("\\[|1|2|3|4|5|6|\\]", "", polls$Institut)
polls$Institut <- gsub("DR", "Epinion", polls$Institut)
#calculate blocs
names(polls)
polls$redbloc<-as.numeric(as.character((polls[,4])))+as.numeric(as.character((polls[,6])))+as.numeric(as.character((polls[,7])))+as.numeric(as.character((polls[,8])))
polls$bluebloc<-as.numeric(as.character((polls[,3])))+as.numeric(as.character((polls[,5])))+as.numeric(as.character((polls[,9])))+as.numeric(as.character((polls[,10])))
polls$blocdiff<-polls$bluebloc-polls$redbloc
#plot
require(ggplot2)
ggplot(polls,aes(x=fulldate,y=blocdiff)) +
geom_point(alpha=.8) +
geom_smooth(method="loess",span=.2,level=.90) +
geom_smooth(method="loess",span=.2,level=.95) +
geom_smooth(method="loess",span=.2,level=.99,color="black") +
xlab("") +
ylab("Blue bloc advantage, percentage points") +
geom_hline(yintercept=0,linetype=2) +
theme_bw()
install.packages("XML")
install.packages("lubridate")
### script based on code by Erik Gahner Larsen, @erikgahner
library(XML)
#pull in data
url <- "http://en.wikipedia.org/wiki/Opinion_polling_for_the_next_Danish_general_election"
polls <- readHTMLTable(url)
#clean up
polls <- polls[[1]]
polls <- polls[-1,1:10]
names(polls) <- c("Institut", "date","Venstre","Socialdemokraterne","DF","Radikale","SF","Enhedslisten","LA","Konservative")
#get full date
breakpoints<-c(which(is.na(polls$date)),nrow(polls)-1)
yearsindata<-c(2014,2013,2012,2011)
polls$fulldate<-NA
for (i in 4:1){
polls$fulldate[0:breakpoints[i]]<-paste(polls$date[0:breakpoints[i]],", ",yearsindata[i],sep="")
}
polls$fulldate[nrow(polls)]<-polls$date[nrow(polls)]
polls<-polls[!is.na(polls$date),]
polls$fulldate[nrow(polls)]<-as.character(polls$date[nrow(polls)])
require(lubridate)
polls$fulldate<-mdy(tolower(polls$fulldate),locale="English")
#clean up house names
polls$Institut <- gsub("\\[|1|2|3|4|5|6|\\]", "", polls$Institut)
polls$Institut <- gsub("DR", "Epinion", polls$Institut)
#calculate blocs
names(polls)
polls$redbloc<-as.numeric(as.character((polls[,4])))+as.numeric(as.character((polls[,6])))+as.numeric(as.character((polls[,7])))+as.numeric(as.character((polls[,8])))
polls$bluebloc<-as.numeric(as.character((polls[,3])))+as.numeric(as.character((polls[,5])))+as.numeric(as.character((polls[,9])))+as.numeric(as.character((polls[,10])))
polls$blocdiff<-polls$bluebloc-polls$redbloc
#plot
require(ggplot2)
ggplot(polls,aes(x=fulldate,y=blocdiff)) +
geom_point(alpha=.8) +
geom_smooth(method="loess",span=.2,level=.90) +
geom_smooth(method="loess",span=.2,level=.95) +
geom_smooth(method="loess",span=.2,level=.99,color="black") +
xlab("") +
ylab("Blue bloc advantage, percentage points") +
geom_hline(yintercept=0,linetype=2) +
theme_bw()
#house effects?
anova(lm(blocdiff~factor(Institut),data=polls))
houseeffects<-as.data.frame(summary(lm(blocdiff~factor(Institut),data=polls))$coefficients[2:8,1:2])
names(houseeffects)<-c("est","se")
houseeffects$house<-as.character(levels(as.factor(polls$Institut))[2:8])
bdmean<-mean(polls$blocdiff)
t95<-1.96
ggplot(houseeffects,aes(x=est-bdmean,y=reorder(house,est))) +
geom_point() +
geom_errorbarh(aes(xmin=est-t95*se-bdmean,xmax=est+t95*se-bdmean,height=0)) +
geom_vline(xintercept=0,linetype=2) +
theme_bw() +
xlab("") +
ylab("")
View(houseeffects)
bdmean<-mean(polls$blocdiff)
View(polls)
bdmean<-mean(polls$blocdiff,na.rm=T)
t95<-1.96
ggplot(houseeffects,aes(x=est-bdmean,y=reorder(house,est))) +
geom_point() +
geom_errorbarh(aes(xmin=est-t95*se-bdmean,xmax=est+t95*se-bdmean,height=0)) +
geom_vline(xintercept=0,linetype=2) +
theme_bw() +
xlab("") +
ylab("")
readLines("/Users/frederikhjorth/Downloads/cses4/cses4.dat",n=10)
trust<-c(4.7,5.3,4.1,6.9,7,5.4,6.5,6.1,4.1,4.4)
barplot(trust)
inst<-c("Kommunalbestyrelsen","Off. administration","Politikerne","Politiet","Domstolene","Banksektoren","Sygehuse","Folkeskolen","Medierne","EU")
df<-data.frame(inst,trust)
barplot(df)
require(ggplot2)
ggplot(df,aes(x=trust,y=inst)) +
geom_point()
ggplot(df,aes(x=trust,y=inst)) +
geom_point() +
theme_bw()
ggplot(df,aes(x=trust,y=reorder(inst,trust))) +
geom_point() +
theme_bw()
df$upper<-df$trust+2/sqrt(1451)
df$lower<-df$trust-2/sqrt(1451)
df$lower<-df$trust-2/sqrt(1451)
ggplot(df,aes(x=trust,y=reorder(inst,trust))) +
geom_point() +
geom_errorbarh(aes(xmin=upper,xmax=lower)) +
theme_bw()
ggplot(df,aes(x=trust,y=reorder(inst,trust))) +
geom_point() +
geom_errorbarh(aes(xmin=upper,xmax=lower),width=0) +
theme_bw()
ggplot(df,aes(x=trust,y=reorder(inst,trust))) +
geom_point() +
geom_errorbarh(aes(xmin=upper,xmax=lower),size=0) +
theme_bw()
ggplot(df,aes(x=trust,y=reorder(inst,trust))) +
geom_point() +
geom_errorbarh(aes(xmin=upper,xmax=lower),size=1) +
theme_bw()
ggplot(df,aes(x=trust,y=reorder(inst,trust))) +
geom_point() +
geom_errorbarh(aes(xmin=upper,xmax=lower,width=0),size=1) +
theme_bw()
ggplot(df,aes(x=trust,y=reorder(inst,trust))) +
geom_point() +
geom_errorbarh(aes(xmin=upper,xmax=lower),width=0) +
theme_bw()
ggplot(df,aes(x=trust,y=reorder(inst,trust))) +
geom_point() +
geom_errorbarh(aes(xmin=upper,xmax=lower),height=0) +
theme_bw()
ggplot(df,aes(x=trust,y=reorder(inst,trust))) +
geom_point() +
geom_errorbarh(aes(xmin=upper,xmax=lower),height=0) +
theme_bw() +
xlab("") +
ylab("")
trust<-c(4.7,5.3,4.1,6.9,7,5.4,6.5,6.1,4.1,4.4)
inst<-c("Kommunalbestyrelsen","Off. administration","Politikerne","Politiet","Domstolene","Banksektoren","Sygehuse","Folkeskolen","Medierne","EU")
df<-data.frame(inst,trust)
df$upper<-df$trust+1.96*2/sqrt(1451)
df$lower<-df$trust-1.96*2/sqrt(1451)
require(ggplot2)
ggplot(df,aes(x=trust,y=reorder(inst,trust))) +
geom_point() +
geom_errorbarh(aes(xmin=upper,xmax=lower),height=0) +
theme_bw() +
xlab("") +
ylab("")
setwd("~/GitHub/comppoldata")
ms<-read.csv(file="msdata.csv")
erd<-read.csv(file="erd.csv")
#country
class(erd$v001e)
erd$cntry<-as.factor(ifelse(erd$v001e %in% c(3,5,6,13,16,17),erd$v001e,NA))
levels(erd$cntry)<-c("Denmark","France","Germany","Norway","Sweden","UK")
#eff no of parties
summary(erd$v309e)
erd$effnop<-erd$v309e
table(erd$effnop)
#date
table(erd$v004e)
#erd$date0<-paste(substr(erd$v004x,5,6),substr(erd$v004x,3,4),as.numeric(substr(erd$v004x,1,2))+1900,sep="-")
require(lubridate)
erd$fulldate<-ymd(erd$v004e)
table(erd$fulldate)
#unempchange
erd$unempchange<-ifelse(erd$v705e<100,erd$v705e,NA)-ifelse(erd$v703e<100,erd$v703e,NA)
#minority?
table(erd$v329e)
erd$minority<-factor(ifelse(erd$v329e==1,1,0))
#govt duration
erd$reldur<-ifelse(erd$v603e<2,erd$v603e,NA)
#regulate line width
erd$ltp<-as.character(ifelse(erd$cntry %in% c("Denmark","Norway","Sweden"),"d","s"))
require(ggplot2)
pdf(file="effnop2.pdf",width=10,height=4)
ggplot(subset(erd,!is.na(cntry)),aes(x=fulldate,y=effnop,group=cntry)) +
geom_line(aes(color=cntry,linetype=ltp)) +
theme_bw() +
scale_colour_brewer(palette="Dark2")
dev.off()
ggplot(subset(erd,!is.na(cntry)),aes(x=fulldate,fill=minority)) +
geom_bar() +
facet_grid(cntry~.) +
theme_bw() +
scale_colour_brewer(palette="Dark2")
pdf(file="minority2.pdf",width=10,height=4)
ggplot(subset(erd,!is.na(cntry)),aes(x=fulldate,fill=minority)) +
geom_bar() +
facet_grid(cntry~.) +
theme_bw() +
scale_colour_brewer(palette="Dark2")
dev.off()
names(erd)
table(erd$v205e)
View(erd)
erd$v205e[erd$cntry=="Denmark"]
erd$v205e[erd$cntry=="Denmark" & !is.na(erd$v205e)]
class(erd$v205e)
which(erd,cntry=="Denmark")
which(erd$cntry=="Denmark")
erd$v205e[which(erd$cntry=="Denmark")]
erd$cntry[which(erd$cntry=="Denmark")]
sdvot<-data.frame(cntry=c(erd$cntry[which(erd$cntry=="Denmark")],erd$cntry[which(erd$cntry=="Norway")],erd$cntry[which(erd$cntry=="Sweden")]),sdseats=c(erd$v205e[which(erd$cntry=="Denmark")],erd$v202e[which(erd$cntry=="Norway")],erd$v201e[which(erd$cntry=="Sweden")]),chambersize=c(erd$v519e[which(erd$cntry=="Denmark")],erd$v519e[which(erd$cntry=="Norway")],erd$v519e[which(erd$cntry=="Sweden")]))
View(sdvot)
class(sdvot$cntry)
levels(as.factor(sdvot$cntry))
sdvot<-data.frame(cntry=c(erd$cntry[which(erd$cntry=="Denmark")],erd$cntry[which(erd$cntry=="Norway")],erd$cntry[which(erd$cntry=="Sweden")]),sdseats=c(erd$v205e[which(erd$cntry=="Denmark")],erd$v202e[which(erd$cntry=="Norway")],erd$v201e[which(erd$cntry=="Sweden")]),chambersize=c(erd$v519e[which(erd$cntry=="Denmark")],erd$v519e[which(erd$cntry=="Norway")],erd$v519e[which(erd$cntry=="Sweden")]),fulldate=c(erd$fulldate[which(erd$cntry=="Denmark")],erd$fulldate[which(erd$cntry=="Norway")],erd$fulldate[which(erd$cntry=="Sweden")]))
sdvot$cntry<-factor(sdvot$cntry,labels=c("Denmark","Norway","Sweden"))
sdvot$seatshare<-sdvot$sdseats/sdvot$chambersize
ggplot(sdvot,aes(x=fulldate,seatshare)) +
geom_point()
ggplot(sdvot,aes(x=fulldate,seatshare)) +
geom_smooth(aes(colour=cntry)) +
geom_point() +
scale_colour_brewer(palette="Dark2") +
theme_bw()
ggplot(sdvot,aes(x=fulldate,seatshare)) +
geom_smooth(aes(colour=cntry)) +
geom_point(aes(colour=cntry)) +
scale_colour_brewer(palette="Dark2") +
xlab("") +
ylab("Social Democrats seat share")
theme_bw()
ggplot(sdvot,aes(x=fulldate,seatshare)) +
geom_smooth(aes(colour=cntry)) +
geom_point(aes(colour=cntry)) +
scale_colour_brewer(palette="Dark2") +
xlab("") +
ylab("Social Democrats seat share") +
theme_bw()
pdf(file="sdshare.pdf",width=10,height=4)
ggplot(sdvot,aes(x=fulldate,seatshare)) +
geom_smooth(aes(colour=cntry)) +
geom_point(aes(colour=cntry)) +
scale_colour_brewer(palette="Dark2") +
xlab("") +
ylab("Social Democrats seat share") +
theme_bw()
dev.off()
